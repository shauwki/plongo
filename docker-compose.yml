services:
  # --- KERN INFRASTRUCTUUR ---
  database:
    image: postgres:15
    container_name: plongo_postgres_main
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - plongo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: plongo_redis
    restart: unless-stopped
    networks:
      - plongo-network

  mqtt:
    image: eclipse-mosquitto:latest
    container_name: plongo_mqtt
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - plongo-network

  # --- AI & AUTOMATISERING ---
  n8n:
    image: n8nio/n8n
    container_name: plongo_n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=database
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME}
      - DB_POSTGRESDB_USER=${N8N_DB_USER}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_URL}
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_URL}
      - GENERIC_TIMEZONE=${TZ}
      - NODE_OPTIONS=--max-old-space-size=4096
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./n8n/n8n_config:/home/node/.n8n
    networks:
      - plongo-network

  ollama:
    image: ollama/ollama
    container_name: plongo_lama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama
    networks:
      - plongo-network

  # --- APPLICATIES ---
  nextcloud:
    image: nextcloud:apache
    container_name: plongo_nextcloud
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - POSTGRES_HOST=database
      - POSTGRES_DB=${NEXTCLOUD_DB_NAME}
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_URL}
      - OVERWRITEHOST=${NEXTCLOUD_URL}
      - OVERWRITEPROTOCOL=https
      - REDIS_HOST=redis
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./nextcloud/html:/var/www/html
      - /home/devki/Nextcloud:/var/www/html/data
    networks:
      - plongo-network

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: plongo_homeassistant
    restart: unless-stopped
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - plongo-network

  jellyfin:
    image: jellyfin/jellyfin
    container_name: plongo_jellyfin
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "8096:8096"
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /mnt/4tb/services/jelly/movies:/media/movies
      - /mnt/4tb/services/jelly/shows:/media/shows
      - /mnt/4tb/services/jelly/shows:/media/live
    networks:
      - plongo-network

  obsidian:
    build: ./obsidian
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./obsidian:/notes
    environment:
      - OBSIDIAN_API_KEY=${OBSIDIAN_API_KEY}
    networks:
      - plongo-network

  web:
    build: ./web
    container_name: plongo_website
    restart: unless-stopped
    volumes:
      - ./web/html:/var/www/html
    networks:
      - plongo-network

  # --- NETWERK & TOEGANG ---
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: plongo_cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - n8n
      - nextcloud
      - homeassistant
    networks:
      - plongo-network

networks:
  plongo-network:
    name: plongo-network